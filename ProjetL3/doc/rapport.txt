apprenttisage j2e
https://openclassrooms.com/courses/creez-votre-application-web-avec-java-ee

h2 derby hypersql
h2 le plus performant
derby (mauvais retours, moins performant qu'h2)
hypersql plus stable et rapide à prendre en mains, moins performant qu'h2


Framework : struts ou jsf

fonctionnalités:
-lister le matériel
-retirer un objet
-rendre un objet
-ajouter nouvel objet
-supprimer objets
-voir historique objet / général
-droits pour ajouter/supprimer objets

Gestion pool BDD > BoneCP

JPA : Hibernate, EclipseLink, consort, TopLink
> EclipseLink = utilisation du standart JPA (Hibernate plus utilisé mais fonctionnalités dépendantes)

Dans un second temps, redévelopper sur un projet Spring avec JPA et Hibernate (plus propre)


BDD
Matériel
	ID
	Nom
	Stock
Emprunt
	#Utilisateur
	#Matériel
	Date
	Nombre
Utilisateur
	ID
	Nom
	Prenom
	email
	mdp

OBJET
	+ID
	INTITULE
	QTITEREST
Emprunt
	+ID
	NOM_USER
	ID_OBJET
	QTITE_EMPRUNT
	RENDU bool
Utilisateur
	+ID
	NOM
	PSWDENC
	EMAIL
	

DROP TABLE Emprunt IF EXISTS;
CREATE TABLE Emprunt
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	ID_USER integer,
	ID_OBJET integer,
	QTITE_EMPRUNT integer,
	RENDU boolean,
	DATE_EMPRUNT datetime default CURRENT_TIMESTAMP,
	DATE_RENDU datetime default null
);

DROP TABLE Utilisateur IF EXISTS;
CREATE TABLE Utilisateur
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	NOM varchar(255),
	PRENOM varchar(255),
	PSWDENC varchar(255),
	EMAIL varchar(255) UNIQUE,
	ROLE varchar(255) DEFAULT 'user'
);

DROP TABLE OBJET IF EXISTS;
CREATE TABLE OBJET
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	INTITULE varchar(255) UNIQUE,
	QTITEREST integer,
	CHECK(QTITEREST>=0)
);
INSERT INTO OBJET (ID,INTITULE,QTITEREST)
VALUES (1,'Table',17);

ALTER TABLE emprunt ADD CONSTRAINT fk_id_user
    FOREIGN KEY (id_user) REFERENCES utilisateur(id)
    ON UPDATE cascade
    ON DELETE cascade;
	
ALTER TABLE emprunt ADD CONSTRAINT fk_id_objet
    FOREIGN KEY (id_objet) REFERENCES objet(id)
    ON UPDATE cascade
    ON DELETE cascade;
	
update utilisateur set role = 'admin';
